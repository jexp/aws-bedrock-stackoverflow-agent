service: aws-bedrock-stackoverflow-agent
frameworkVersion: '3'

provider:
  name: aws
  region: us-east-1
  runtime: python3.11
  environment:
    POWERTOOLS_LOGGER_LOG_EVENT: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'bedrock:ListFoundationModels'
            - 'bedrock:InvokeModel'
          Resource: '*'

resources:
  Resources:
    BedrockInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !GetAtt SoUnderscorequestionsLambdaFunction.Arn
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
        SourceArn:
          Fn::Sub: 'arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/501UOYAZPN'

    myDefaultRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AmazonBedrockExecutionRoleForAgents_SOQuestions
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - bedrock.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Policies:
          - PolicyName: AmazonBedrockAgentBedrockFoundationModelPolicyProd
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action: 'bedrock:InvokeModel'
                  Resource:
                    Fn::Sub: 'arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-v2'
          - PolicyName: AmazonBedrockAgentS3Policy_D3A6SOR87IB
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action: 's3:GetObject'
                  Resource: 'arn:aws:s3:::data.neo4j.com/bedrock-agent-stackoverflow-openapi.json'
                  Condition:
                    StringEquals:
                      AWS:SourceAccount: !Ref AWS::AccountId

functions:
  so_questions:
    handler: handler.so_questions
    events:
      - httpApi: 'GET /questions/{tag}'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true